func {{routeName}}GetAll(db *sql.DB, {{primaryKeysVarFunc}}, arrayOutput bool) (string, error) {
	result, err := tools.ExecuteQuery(db, "SELECT {{fields}} FROM `{{routeTable}}` WHERE {{primaryKeysSQL}}", {{primaryKeys}})
	if err != nil {
		return "", err
	}
	defer result.Close()

	return {{routeName}}GetAllAssociation(result, arrayOutput)
}

func {{routeName}}GetAllAssociation(result *sql.Rows, arrayOutput bool) (string, error) {
	var {{fieldsVar}} string

	switch arrayOutput {
	case true:
		var jsonResponse string
		jsonResponse += `[`
		for result.Next() {
			err := result.Scan({{fieldsVarPointer}})
			if err != nil {
				return "", err
			}
			jsonResponse += `{{{fieldsJson}}},`
		}
		if len(jsonResponse) > 1 {
			jsonResponse = jsonResponse[:len(jsonResponse)-1]
		}
		jsonResponse += `]`
		return jsonResponse, nil
	default:
		for result.Next() {
			err := result.Scan({{fieldsVarPointer}})
			if err != nil {
				return "", err
			}
		}
		return `{{fieldsJson}}`, nil
	}
}